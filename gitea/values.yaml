gitea:
  #
  # IMPORTANT NOTE
  #
  # This chart inherits from our common library chart. You can check the default values/options here:
  # https://github.com/k8s-at-home/library-charts/tree/main/charts/stable/common/values.yaml
  #

  image:
    # -- image repository
    repository: gitea/gitea
    # -- image tag
    tag: 
    # -- image pull policy
    pullPolicy: IfNotPresent

  # -- environment variables. See more environment variables in the [gitea documentation](https://gitea.org/docs).
  # @default -- See below
  env:
    # -- Set the container timezone
    TZ: "Europe/Rome"

  # -- Optional DNS settings, configuring the ndots option may resolve nslookup issues on some Kubernetes setups.
  dnsConfig:
    options:
      - name: ndots
        value: "1" # Fix dns ussue with github.com resolution

  # -- gitea specific configuration keys. Must be formatted as GITEA__[section]__variable
  # @default -- See https://docs.gitea.io/en-us/config-cheat-sheet/
  config:
    GITEA__APP_NAME: "Gitea: Git with a cup of tea"
    GITEA__RUN_MODE: prod
    GITEA__repository__ROOT: /code
    GITEA__server__APP_DATA_PATH: /data/gitea
    GITEA__server__DOMAIN: gitea.k8s.minikube.io
    GITEA__server__SSH_DOMAIN: gitea.minikube.io
    GITEA__service__DISABLE_REGISTRATION: "true"
    GITEA__service__REQUIRE_SIGNIN_VIEW: "false"
    GITEA__webhook__ALLOWED_HOST_LIST: private
    GITEA__webhook__SKIP_TLS_VERIFY: "true"
  
  # -- Configures service settings for the chart.
  # @default -- See values.yaml
  service:
    main:
      type: LoadBalancer
      loadBalancerIP: "10.0.254.15"
      ports:
        http:
          port: 3000
        ssh:
          enabled: true
          port: 22

  ingress:
    # -- Enable and configure ingress settings for the chart under this key.
    # @default -- See values.yaml
    main:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: ca-issuer
      hosts:
        - host: gitea.k8s.minikube.io
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - gitea.k8s.minikube.io
          secretName: gitea-tls

  # -- Configure persistence settings for the chart under this key.
  ## Config persistence is required for the Prometheus exporter sidecar.
  # @default -- See values.yaml
  persistence:
    data:
      enabled: true
      size: 4Gi
      mountPath: /data
      accessMode: ReadWriteOnce
    code:
      enabled: true
      existingClaim: cephfs-develop-claim
      subPath: apps/gitea
      mountPath: /code
    # my-cert-ca:
    #   enabled: true
    #   type: configMap
    #   name: my-cert-ca
    #   mountPath: /etc/ssl/certs/my_cert.pem
    #   subPath: my_cert.pem

  # -- Enable and configure postgresql database subchart under this key.
  #    For more options see [postgresql chart documentation](https://github.com/bitnami/charts/tree/master/bitnami/postgresql)
  # @default -- See values.yaml
  postgresql:
    enabled: true
    architecture: standalone
    auth:
      database: gitea
      username: gitea
      password: FiASQ45Yjo7Ha9
    primary:
      persistence:
        enabled: true
        size: 4Gi

  # -- Enable and configure mariadb database subchart under this key.
  #    For more options see [mariadb chart documentation](https://github.com/bitnami/charts/tree/master/bitnami/mariadb)
  # @default -- See values.yaml
  mariadb:
    enabled: false
    architecture: standalone
    auth:
      database: gitea
      username: gitea
      password: FiASQ45Yjo7Ha9
    primary:
      persistence:
        enabled: false
        size: 4Gi

  # -- Enable and configure redis subchart under this key.
  #    For more options see [redis chart documentation](https://github.com/bitnami/charts/tree/master/bitnami/redis)
  # @default -- See values.yaml
  redis:
    enabled: true
    architecture: standalone
    auth:
      enabled: true
      password: "FiASQ45Yjo7Ha9"
    master:
      persistence:
        enabled: true
        size: 6Gi 

  addons:
      # -- The common library supports adding a code-server add-on to access files. It can be configured under this key.
    # For more info, check out [our docs](http://docs.k8s-at-home.com/our-helm-charts/common-library-add-ons/#code-server)
    # @default -- See values.yaml
    codeserver:
      # -- Enable running a code-server container in the pod
      enabled: true

      image:
        # -- Specify the code-server image
        repository: codercom/code-server
        # -- Specify the code-server image tag
        tag: 4.2.0
        # -- Specify the code-server image pull policy
        pullPolicy: IfNotPresent

      # -- Set any environment variables for code-server here
      env:
        TZ: "Europe/Rome"
        HOME: /root

      # -- Set codeserver command line arguments.
      # Consider setting --user-data-dir to a persistent location to preserve code-server setting changes
      args:
        - --auth
        - none
        - --user-data-dir
        - "/root/.vscode"
        - --extensions-dir
        - "/root/.vscode/extensions"

      # -- Specify a list of volumes that get mounted in the code-server container.
      # At least 1 volumeMount is required!
      volumeMounts:
        - name: code
          subPath: data/Code
          mountPath: /root
        # - name: my-cert-ca
        #   mountPath: /etc/ssl/certs/my_cert.pem
        #   subPath: my_cert.pem

      # -- Specify the working dir that will be opened when code-server starts
      # If not given, the app will default to the mountpah of the first specified volumeMount
      workingDir: ""

      # -- Optionally allow access a Git repository by passing in a private SSH key
      # @default -- See below
      git:
        # -- Raw SSH private key
        deployKey: ""
        # -- Base64-encoded SSH private key. When both variables are set, the raw SSH key takes precedence.
        deployKeyBase64: ""
        # -- Existing secret containing SSH private key
        # The chart expects it to be present under the `id_rsa` key.
        deployKeySecret: ""

      service:
        # -- Enable a service for the code-server add-on.
        enabled: true
        type: ClusterIP
        # Specify the default port information
        ports:
          codeserver:
            port: 12321
            enabled: true
            protocol: TCP
            targetPort: codeserver
            ## Specify the nodePort value for the LoadBalancer and NodePort service types.
            ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
            ##
            # nodePort:
        annotations: {}
        labels: {}
        # -- Specify the ip policy. Options: SingleStack, PreferDualStack, RequireDualStack
        ipFamilyPolicy: SingleStack
        # -- The ip families that should be used. Options: IPv4, IPv6
        ipFamilies:
          - IPv4

      ingress:
        # -- Enable an ingress for the code-server add-on.
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: ca-issuer
        hosts:
          - host: vscode.k8s.minikube.io
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - vscode.k8s.minikube.io
            secretName: vscode-tls
        
      securityContext:
        runAsUser: 0